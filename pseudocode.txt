DEFINE getComputerChoice() => STRING
    create a list called choices that contains "rock", "paper", and "scissors"
    create a variable called randomNumber of type number that starts with a random number between 0 and 2
    return an item at index randomNumber of choices
END

=================================================================

DEFINE getWinner(playerSelection, computerSelection) => STRING
    if (computerSelection === "rock" and playerSelection === "scissors"
    or computerSelection === "paper" and playerSelection === "rock"
    or computerSelection === "scissors" and playerSelection === "paper") then
    
        return "computer"

    else if (computerSelection === "rock" and playerSelection === "paper"
    or computerSelection === "paper" and playerSelection === "scissors"
    or computerSelection === "scissors" and playerSelection === "rock") then

        return "player"
END

=================================================================

DEFINE playRound(playerSelection, computerSelection) =>  UNDEFINED
    create a constant variable called winner of type string that contains results from getWinner()

    if playerSelection === computerSelection then
        output "It's a draw"

    else if winner === "computer" then
        output "You lose! ${computerSelection} beats ${playerSelection}"

    else output "You win! ${playerSelection} beats ${computerSelection}"
END

=================================================================

DEFINE getUserHandShape() => string
    create a variable called userChosenHandShape of type string
    create a list called handShapes that contains "rock", "paper", "scissors"
    repeatedly run a while loop 
        ask the user "Indicate your hand shape?" and store the answer in userChosenHandShape
            if userChosenHandShape is in handShapes
                break out of the loop

    return userChosenHandShape
END

=================================================================

DEFINE game() => undefined 
    create a variable called computerScore of type number that starts with 0
    create a variable called playerScore of type number that starts with 0
    create a variable called computerSelection of type string that starts empty
    create a variable called playerSelection of type string that starts empty
    create a variable called winner of type string that starts empty
    begin with i at 0 and add 1 to i on each pass until i is larger than or equal to 5
        assign getComputerChoice() to variable computerSelection
        assign getUserHandShape() to variable playerSelection
        invoke playRound with inputs (playerSelection, computerSelection)
        assign getWinner(playerSelection, computerSelection) to variable winner
        if winner === "computer" then increment computerScore with 1
        else if winner === "player" then increment playerScore with 1

    if computerScore !== playerScore then
        assign "computer" to variable winner if computerScore is higher than playerScore otherwiser assign "player"
        output "
            The Final Score => player ${playerScore} : ${computerScore} computer

            And the winner is ${winner}
        "
    else output "It's a draw"